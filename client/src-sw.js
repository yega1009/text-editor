const { offlineFallback, warmStrategyCache } = require('workbox-recipes');
const { CacheFirst } = require('workbox-strategies');
const { StaleWhileRevalidate } = require('workbox-strategies');
const { registerRoute } = require('workbox-routing');
const { CacheableResponsePlugin } = require('workbox-cacheable-response');
const { ExpirationPlugin } = require('workbox-expiration');
const { precacheAndRoute } = require('workbox-precaching/precacheAndRoute');

// Precaches the assets generated by webpack according to the manifest file.
precacheAndRoute(self.__WB_MANIFEST);

// Sets up a cache-first strategy for pages.
const pageCache = new CacheFirst({
  cacheName: 'page-cache',
  plugins: [
    // Ensures only requests with certain statuses are cached.
    new CacheableResponsePlugin({
      statuses: [0, 200],
    }),
    // Limits the age of cached files to 30 days.
    new ExpirationPlugin({
      maxAgeSeconds: 30 * 24 * 60 * 60,
    }),
  ],
});

// Precaches specific URLs to ensure they are immediately available.
warmStrategyCache({
  urls: ['/index.html', '/'],
  strategy: pageCache,
});

// Sets up a caching strategy for navigation requests.
registerRoute(({ request }) => request.mode === 'navigate', pageCache);

// Implement asset caching for styles, scripts, and image requests.
registerRoute(
  ({ request }) => ['style', 'script', 'image'].includes(request.destination),
  new StaleWhileRevalidate({
    cacheName: 'asset-cache',
    plugins: [
      // Ensures only requests with certain statuses are cached.
      new CacheableResponsePlugin({ statuses: [0, 200] }),
      // Limits the number of entries in the cache to 50.
      new ExpirationPlugin({ maxEntries: 50 }),
    ],
  })
);
